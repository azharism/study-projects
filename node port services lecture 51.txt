KUBERNETES NETWORKING
=================================
kind: Pod
apiVersion: v1
metadata:
  name: testpod2
spec:
  containers:
    - name: c00
      image: httpd
      command: ["/bin/bash", "-c", "while true; do echo Hello-Bhupinder; sleep 5 ; done"]
      ports:
       - containerPort: 80

1. kubectl exec testpod -it -c c00 -- bin/bash
2. apt update && apt install curl
3. curl localhost:80
4. curl pod ip:80   ##used to coomuniate one pod to another pod
===============================================================================================

kind: Deployment
apiVersion: apps/v1
metadata:
   name: mydeployments
spec:
   replicas: 1
   selector:      # tells the controller which pods to watch/belong to
    matchLabels:
     name: deployment
   template:
     metadata:
       name: testpod1
       labels:
         name: deployment
     spec:
      containers:
        - name: c00
          image: httpd
          ports:
          - containerPort: 80

1. kubectl apply -f deploy.yml
2.kubectl geet pods
3.curl 172.06.05.6:80
==============================================================================

kind: Service                             # Defines to create Service type Object
apiVersion: v1
metadata:
  name: demoservice
spec:
  ports:
    - port: 80                               # Containers port exposed
      targetPort: 80                     # Pods port
  selector:
    name: deployment                    # Apply this service to any pods which has the specific label
  type: ClusterIP                       # Specifies the service type i.e ClusterIP or NodePort

1. kubectl get svc
2.

