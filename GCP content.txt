cli command of GCP=======================================
1.gcloud compute instances create myvm01 --machine-type n2-standard-4 --zone us-central-a
--.for accessing machine via cli
2.gcloud compute ssh myvm01 --zone=us-central-a
3.gcloud compute image list
4.gcloud compute instances myvm02
5.gcloud compute instances stop myvm02
6.gcloud compute instances start myvm02
7.gcloud compute instances delet myvm02

8.gcloud compute instances stop  vm-name

use for resize machine type=======
9.gcloud compute instances set-machine-type vmname --machine-type e2-standard-2

use fo resize machine type cusomize way=======================
10.gcloud compute instances set-machine-type (existingvmname) --machine-type (newmachinename) e2-custom-4-2048 

for disk resize via cloudshell====
11. gcloud compute disks resize instance-1 --zone us-central1-c --size 40
=======================================================================================================================================
static website hosting on cloud storage-----------------
1. go to cloudshell
2. wget and url link for website download
3. ls
smaple-banner.zip
5.mkdir website
6. mv sample-banner website
7. cd website
8. unzip sample banner-website
9.gsuitl -m cp -r sample-website gs://madiha

==================================================================================================================================================

images creation via cloud shell----------
gcloud config set project azhar-cloud421

firstly disable auto delete disk

1. gcloud compute instances set-disk-auto-delete vm-name --no-auto-delete --disk=sourceDiskName
2. gcloud compute images create image-name --source-disk=source-disk --source-disk-zone=zone --storage-location=asia or us --force
3. gcloud compute images describe image-name
4. gcloud compute images delete images-name
===============================================================================================================================
machine-image creation via cli--------------------------
1.gcloud compute machine-images create machine-image-name --source-instance=source-vm-name --source-instance-zone=us-central-a
2.gcloud beta compute instances create vm-name --zone=zone-name --source-machine-image=machine-image-name --machine-type=e2-standard-2 
=====================================================================================================================================================
google cloud storage cloudshell commands=============================================================================================================
create a bucket------
2.gsutil cp your-file.txt gs://your-bucket-name/  ( Copying a File to a Bucket:)
3. gsutil cp gs://your-bucket-name/your-file.txt ./local-directory/  (downlaod the object from your  a Bucket Object Locally:)
4. gsutil ls   ( List bucket)
5. gsutil ls gs://your-bucket-name/     ( List Objects in a Bucket:)
6. gsutil rm gs://your-bucket-name/your-file.txt   (deleting a file in a bucket)
7. gsutil rb gs://your-bucket-name             (deleting a bucket)
8. gsutil rsync -r local-directory gs://your-bucket-name/    (synking a local file with bucket)
9. gsutil acl ch -u AllUsers:R gs://your-bucket-name/your-file.txt   (Access Control)
10. gsutil acl ch -d AllUsers gs://your-bucket-name/your-file.txt    rovoke all access from bucket)
11. gsutil -o 'GSUtil:default_storage_class=NEARLINE' cp your-file.txt gs://your-bucket-name/  ( Defining Storage Class:)




1. gsutil mb -b on -l us-central1 gs://azhar_cloud143   (gs://azhar_cloud124 defines bucket name)
upload the file on cloudshell to store in bucket object
2. cloudeshell->file->upload file
3.pwd
4. gsutil cp imagename.jpg gs://azhar_cloud123  (bucket name)
downlaod the object from your bucket 
5. gsutil cp gs://azhar_cloud143/'Screenshot (151).png' /home/azharism51/download.png
6. gsutil cp gs://azhar_cloud143/ file.name.png gs://azhar_cloud143/myfolder/file.name.png
7.gsutil ls -l gs://bucket-name/filename
8. gsutil iam ch allUsers:objectViewer gs://bucket-name     (giving public access)
vv.gsutil iam ch -d allUsers:objectViewer gs://bucket-name   (remove the public access)
9 gsutil rm gs://bucketname/filename      (delete an object or file)
10 gsutil rm -r gs://bucket-name           (delete a bucket)
====================================================================================================================================================
versioning of bucket----------------------------
1. gsutil versioning set off gs://bucket-name      (bucket versioning on or off)
2. gsutil versioning get gs://bucket-name          (to get the bcuket versioning info)
3. gsutil ls -a gs://bucket-name
4. gsutil cp gs://madiha/objetc.txt#1699041664252818 gs://madiha/objetc.txt    (versioning update )
5 gsutil rm gs://bucket-name version name  (delete an specific version)    

==============================================================================================================================
signed url creation steps and and command-------------
work as a root user-------
1.create a bucket and upload an obeject
2.go to api and sercvices create credentials for service account doesnt exist
3.create a key in json format
4.upload the json file key in cloud shell
5.dowlaod some libraries command below
6. pip install pyopenssl
7.gsutil gs://buckect-name
7 gsutil signurl -d 60s key.json gs://madiha/object-name 




=======================================================================================================================================================
VPC cli command+++++++++++++++++++
1.gcloud compute networks create auto-vpc --project=triple-cab-353707 --subnet-mode=auto --mtu=1460 --bgp-routing-mode=regional
2.gcloud compute networks create auto-vpc --project=triple-cab-353707 --subnet-mode=auto --mtu=1460 --bgp-routing-mode=regional
3.gcloud compute firewall-rules create auto-vpc-allow-rdp-2 --project=triple-cab-353707 --network=projects/triple-cab-353707/global/networks/auto-vpc --description=Allows\ RDP\ connections\ from\ any\ source\ to\ any\ instance\ on\ the\ network\ using\ port\ 3389. --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 --action=ALLOW --rules=tcp:3389
4.gcloud compute firewall-rules create auto-vpc-allow-ssh-2 --project=triple-cab-353707 --network=projects/triple-cab-353707/global/networks/auto-vpc --description=Allows\ TCP\ connections\ from\ any\ source\ to\ any\ instance\ on\ the\ network\ using\ port\ 22. --direction=INGRESS --priority=65534 --source-ranges=0.0.0.0/0 --action=ALLOW --rules=tcp:22
===============================================================================================================================================================
app engine commands=================================================

1.gcloud deploy app -v servicename



